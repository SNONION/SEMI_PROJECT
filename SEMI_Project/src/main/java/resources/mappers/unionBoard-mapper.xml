<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="selectListCount">
		SELECT  COUNT(*) LIST_COUNT
		FROM    TB_UNIONBOARD
		WHERE  STATUS = 'Y'
	</entry>
	
	<entry key="selectBoardList">
		SELECT  *
		FROM    (SELECT   ROWNUM RNUM, A.*
		         FROM     (SELECT  BOARD_NO,
		                           CATEGORY_NAME,
		                           BOARD_TITLE,
		                           NICKNAME,
		                           COUNT,
		                           TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE
		                   FROM    TB_UNIONBOARD B
		                   JOIN    TB_CATEGORY C USING(CATEGORY_NO)
		                   JOIN    TB_USERINFO U ON(B.BOARD_WRITER = U.USER_NO)
		                   WHERE   B.STATUS = 'Y'
		                   ORDER BY CREATE_DATE DESC) A)
		WHERE   RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectRecomCount">
		SELECT   COUNT(*) RECOM_COUNT
		FROM    TB_RECOMMEND
		WHERE   BOARD_NO = ?
	</entry>
	
	<entry key="cateBoardCount">
		SELECT  COUNT(*) BOARD_COUNT
		FROM    TB_UNIONBOARD
		WHERE   CATEGORY_NO = ?
		AND     STATUS = 'Y'
	</entry>
	
	<entry key="selectCateBoardList">
		SELECT  *
		FROM    (SELECT   ROWNUM RNUM, A.*
		         FROM     (SELECT  BOARD_NO,
		                           CATEGORY_NAME,
		                           BOARD_TITLE,
		                           NICKNAME,
		                           COUNT,
		                           TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE
		                   FROM    TB_UNIONBOARD B
		                   JOIN    TB_CATEGORY C USING(CATEGORY_NO)
		                   JOIN    TB_USERINFO U ON(B.BOARD_WRITER = U.USER_NO)
		                   WHERE   B.STATUS = 'Y'
                           AND     CATEGORY_NO = ?
		                   ORDER BY CREATE_DATE DESC) A)
		WHERE   RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectDetailBoard">
		SELECT  BOARD_NO,
		        CATEGORY_NAME,
		        BOARD_TITLE,
		        BOARD_CONTENT,
		        NICKNAME,
		        COUNT,
		        TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE
		FROM    TB_UNIONBOARD
		JOIN    TB_USERINFO ON(BOARD_WRITER = USER_NO)
		JOIN    TB_CATEGORY USING(CATEGORY_NO)
		WHERE   BOARD_NO = ?
	</entry>
	
	<entry key="selectImgFile">
		SELECT  FILE_TYPE,
		        ORIGINFILE_NAME,
		        CHANGEFILE_NAME,
		        FILE_PATH,
		        UPLOAD_DATE
		FROM    TB_MEDIAFILE
		WHERE   REF_BOARD_NO = ?
		AND		STATUS = 'Y'
	</entry>
	
	<entry key="selectCategory">
		SELECT  CATEGORY_NO,
				CATEGORY_NAME
		FROM    TB_CATEGORY
	</entry>
	
	<entry key="updateClickCount">
		UPDATE  TB_UNIONBOARD
		SET     COUNT = COUNT + 1
		WHERE   BOARD_NO = ?
		AND     STATUS = 'Y'
	</entry>
	
	<entry key="insertRecomCount">
		INSERT INTO TB_RECOMMEND VALUES (?,?)
	</entry>
	
	<entry key="checkDupRecom">
		SELECT  COUNT(*) COUNT
		FROM    TB_RECOMMEND
		WHERE   USER_NO = ?
		AND     BOARD_NO = ?
	</entry>
	
	<entry key="deleteRecomCount">
		DELETE FROM TB_RECOMMEND
		WHERE   USER_NO = ?
		AND     BOARD_NO = ?
	</entry>
	
	<entry key="selectReply">
		SELECT  *
		FROM    (SELECT  ROWNUM RNUM, A.*
		         FROM    (SELECT  NICKNAME,
		                          REPLY_CONTENT,
		                          TO_CHAR(REPLY_DATE, 'YYYY-MM-DD') REPLY_DATE,
		                          REPLY_NO
		                  FROM    TB_REPLY R
		                  JOIN    TB_USERINFO USING(USER_NO)
		                  WHERE   REF_BOARD_NO = ?
		                  AND     R.STATUS = 'Y'
		                  ORDER BY REPLY_DATE DESC) A)
		WHERE   RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="insertReply">
		INSERT INTO TB_REPLY(USER_NO,
		                     REF_BOARD_NO,
		                     REPLY_CONTENT,
		                     REPLY_NO)
		VALUES(?,?,?,SEQ_REPLYNO.NEXTVAL)
	</entry>
	
	<entry key="selectTitleKeyBoard">
		SELECT  *
		FROM    (SELECT   ROWNUM RNUM, A.*
		         FROM     (SELECT  BOARD_NO,
		                           CATEGORY_NAME,
		                           BOARD_TITLE,
		                           NICKNAME,
		                           COUNT,
		                           TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE
		                   FROM    TB_UNIONBOARD B
		                   JOIN    TB_CATEGORY C USING(CATEGORY_NO)
		                   JOIN    TB_USERINFO U ON(B.BOARD_WRITER = U.USER_NO)
		                   WHERE   BOARD_TITLE LIKE ?
		                   AND     B.STATUS = 'Y'
		                   ORDER BY CREATE_DATE DESC) A)
		WHERE   RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectKeyBoardCount">
		SELECT  COUNT(*) COUNT
		FROM    TB_UNIONBOARD
		WHERE   BOARD_TITLE LIKE ?
		AND STATUS = 'Y'
	</entry>
	
	<entry key="selectCateKeyBoardCount">
		SELECT  COUNT(*) COUNT
		FROM    TB_UNIONBOARD
		WHERE   BOARD_TITLE LIKE ?
		AND		CATEGORY_NO = ?
		AND   	STATUS = 'Y'
	</entry>
	
	<entry key="selectCateTitleKeyBoard">
		SELECT  *
		FROM    (SELECT   ROWNUM RNUM, A.*
		         FROM     (SELECT  BOARD_NO,
		                           CATEGORY_NAME,
		                           BOARD_TITLE,
		                           NICKNAME,
		                           COUNT,
		                           TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE
		                   FROM    TB_UNIONBOARD B
		                   JOIN    TB_CATEGORY C USING(CATEGORY_NO)
		                   JOIN    TB_USERINFO U ON(B.BOARD_WRITER = U.USER_NO)
		                   WHERE   BOARD_TITLE LIKE ?
		                   AND     CATEGORY_NO = ?
		                   AND     B.STATUS = 'Y'
		                   ORDER BY CREATE_DATE DESC) A)
		WHERE   RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectBoardNo">
		SELECT	SEQ_BNO.NEXTVAL BOARD_NO
		FROM	DUAL
	</entry>
	
	<entry key="insertBoard">
		INSERT INTO TB_UNIONBOARD(BOARD_NO,
		                          CATEGORY_NO,
		                          BOARD_TITLE,
		                          BOARD_CONTENT,
		                          BOARD_WRITER)
		VALUES(?,?,?,?,?)
	</entry>

	<entry key="insertMedia">
		INSERT INTO TB_MEDIAFILE(FILE_NO,
		                         FILE_TYPE,
		                         ORIGINFILE_NAME,
		                         CHANGEFILE_NAME,
		                         REF_BOARD_NO,
		                         FILE_PATH)
		VALUES(SEQ_FNO.NEXTVAL,?,?,?,?,?)
	</entry>
	
	<entry key="selectMediaFile">
		SELECT  FILE_NO,
				FILE_TYPE,
		        ORIGINFILE_NAME,
		        CHANGEFILE_NAME,
		        FILE_PATH
		FROM    TB_MEDIAFILE
		WHERE   REF_BOARD_NO = ?
		AND     STATUS = 'Y'
	</entry>
	
	<entry key="insertWorkout">
		INSERT INTO TB_WORKOUTLIST(USER_NO,
		                           WORKOUT_TITLE,
		                           WORKOUT_CONTENT,
		                           WORKOUT_NO) 
		VALUES(?,?,?,SEQ_WORKNO.NEXTVAL)
	</entry>
	
	<entry key="selectReplyCount">
		SELECT	COUNT(*) COUNT
		FROM	TB_REPLY
		WHERE	REF_BOARD_NO = ?
		AND		STATUS = 'Y'
	</entry>
	
	<entry key="deleteMyReply">
		UPDATE  TB_REPLY
		SET     STATUS = 'N'
		WHERE   REPLY_NO = ?
	</entry>
	
	<entry key="deleteBoard">
		UPDATE  TB_UNIONBOARD
		SET     STATUS = 'N'
		WHERE   BOARD_NO = ?
	</entry>
	
	<entry key="checkMedia">
		SELECT  COUNT(*) COUNT
		FROM    TB_MEDIAFILE
		WHERE   REF_BOARD_NO = ?
	</entry>
	
	<entry key="deleteMedia">
		UPDATE  TB_MEDIAFILE
		SET     STATUS = 'N'
		WHERE   REF_BOARD_NO = ?
	</entry>
	
	<entry key="updateBoard">
		UPDATE  TB_UNIONBOARD
		SET     CATEGORY_NO = ?,
		        BOARD_TITLE = ?,
		        BOARD_CONTENT = ?,
		        MODIFY_DATE = SYSDATE
		WHERE   BOARD_NO = ?
		AND     BOARD_WRITER = ?
	</entry>
	
	<entry key="popularBoardListCount">
		SELECT  COUNT(*) COUNT
		FROM    (SELECT COUNT(*) A
		        FROM    TB_RECOMMEND
		        GROUP BY BOARD_NO)
		WHERE   A >= 2
	</entry>
	
	<entry key="selectPopularBoardList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		      FROM (SELECT B.BOARD_NO, 
		                   CATEGORY_NAME, 
		                   B.BOARD_TITLE,  
		                   NICKNAME, 
		                   B.COUNT,         
		                   TO_CHAR(B.CREATE_DATE, 'yyyy-MM-dd') CREATE_DATE,
		                   COALESCE(R.RECOMMEND_COUNT, 0) RECOMMEND_COUNT,
		                   COALESCE(RE.REPLY_COUNT, 0) REPLY_COUNT
		            FROM TB_UNIONBOARD B
		            JOIN TB_USERINFO U ON B.BOARD_WRITER = U.USER_NO
		            JOIN TB_CATEGORY C ON B.CATEGORY_NO = C.CATEGORY_NO
		            LEFT JOIN (SELECT BOARD_NO, COUNT(*) RECOMMEND_COUNT
		                      FROM TB_RECOMMEND
		                      GROUP BY BOARD_NO
		            ) R ON B.BOARD_NO = R.BOARD_NO
		            LEFT JOIN (SELECT REF_BOARD_NO, COUNT(*) REPLY_COUNT
		                      FROM TB_REPLY
		                      GROUP BY REF_BOARD_NO
		            ) RE ON B.BOARD_NO = RE.REF_BOARD_NO
		            WHERE B.STATUS = 'Y'
		            ORDER BY RECOMMEND_COUNT DESC) A)
		WHERE RNUM BETWEEN ? AND ?
		AND RECOMMEND_COUNT >= 2
	</entry>
	
	<entry key="selectPopularTitleKeyBoard">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		      FROM (SELECT B.BOARD_NO, 
		                   CATEGORY_NAME, 
		                   B.BOARD_TITLE,  
		                   NICKNAME, 
		                   B.COUNT,         
		                   TO_CHAR(B.CREATE_DATE, 'yyyy-MM-dd') CREATE_DATE,
		                   COALESCE(R.RECOMMEND_COUNT, 0) RECOMMEND_COUNT,
		                   COALESCE(RE.REPLY_COUNT, 0) REPLY_COUNT
		            FROM TB_UNIONBOARD B
		            JOIN TB_USERINFO U ON B.BOARD_WRITER = U.USER_NO
		            JOIN TB_CATEGORY C ON B.CATEGORY_NO = C.CATEGORY_NO
		            LEFT JOIN (SELECT BOARD_NO, COUNT(*) RECOMMEND_COUNT
		                      FROM TB_RECOMMEND
		                      GROUP BY BOARD_NO
		            ) R ON B.BOARD_NO = R.BOARD_NO
		            LEFT JOIN (SELECT REF_BOARD_NO, COUNT(*) REPLY_COUNT
		                      FROM TB_REPLY
		                      GROUP BY REF_BOARD_NO
		            ) RE ON B.BOARD_NO = RE.REF_BOARD_NO
		            WHERE B.STATUS = 'Y'
		            AND   B.BOARD_TITLE LIKE ?
		            ORDER BY B.CREATE_DATE DESC) A)
		WHERE RNUM BETWEEN ? AND ?
		AND RECOMMEND_COUNT >= 2
	</entry>
	
	<entry key="selectPopularKeyBoardCount">
		SELECT COUNT(*) COUNT
		FROM (SELECT B.BOARD_NO, 
		             CATEGORY_NAME, 
		             B.BOARD_TITLE,  
		             NICKNAME, 
		             B.COUNT,         
		             TO_CHAR(B.CREATE_DATE, 'yyyy-MM-dd') CREATE_DATE,
		             COALESCE(R.RECOMMEND_COUNT, 0) AS RECOMMEND_COUNT,
		             COALESCE(RE.REPLY_COUNT, 0) AS REPLY_COUNT
		      FROM TB_UNIONBOARD B
		      JOIN TB_USERINFO U ON B.BOARD_WRITER = U.USER_NO
		      JOIN TB_CATEGORY C ON B.CATEGORY_NO = C.CATEGORY_NO
		      LEFT JOIN (SELECT BOARD_NO, COUNT(*) AS RECOMMEND_COUNT
		                 FROM TB_RECOMMEND
		                 GROUP BY BOARD_NO
		      ) R ON B.BOARD_NO = R.BOARD_NO
		      LEFT JOIN (SELECT REF_BOARD_NO, COUNT(*) AS REPLY_COUNT
		                 FROM TB_REPLY
		                 GROUP BY REF_BOARD_NO
		      ) RE ON B.BOARD_NO = RE.REF_BOARD_NO
		      WHERE B.STATUS = 'Y'
		      AND B.BOARD_TITLE LIKE ?
		)
	</entry>
	
	<entry key="simpleBoardList">
		SELECT  *
		FROM    (SELECT  ROWNUM RNUM, A.*
		         FROM    (SELECT  BOARD_NO,
		                          BOARD_TITLE,
		                          COUNT
		                  FROM    TB_UNIONBOARD
		                  WHERE   STATUS = 'Y'
		                  ORDER BY BOARD_NO DESC) A)
		WHERE   RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectAnnounceCount">
		SELECT  COUNT(*) COUNT
		FROM    TB_UNIONBOARD
		WHERE   CATEGORY_NO = 10
		AND		STATUS = 'Y'
	</entry>

	<entry key="announceBoardList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		      FROM (SELECT B.BOARD_NO, 
		                   CATEGORY_NAME, 
		                   B.BOARD_TITLE,  
		                   NICKNAME, 
		                   B.COUNT,         
		                   TO_CHAR(B.CREATE_DATE, 'yyyy-MM-dd') CREATE_DATE,
		                   COALESCE(R.RECOMMEND_COUNT, 0) RECOMMEND_COUNT,
		                   COALESCE(RE.REPLY_COUNT, 0) REPLY_COUNT
		            FROM TB_UNIONBOARD B
		            JOIN TB_USERINFO U ON B.BOARD_WRITER = U.USER_NO
		            JOIN TB_CATEGORY C ON B.CATEGORY_NO = C.CATEGORY_NO
		            LEFT JOIN (SELECT BOARD_NO, COUNT(*) RECOMMEND_COUNT
		                      FROM TB_RECOMMEND
		                      GROUP BY BOARD_NO
		            ) R ON B.BOARD_NO = R.BOARD_NO
		            LEFT JOIN (SELECT REF_BOARD_NO, COUNT(*) REPLY_COUNT
		                      FROM TB_REPLY
		                      GROUP BY REF_BOARD_NO
		            ) RE ON B.BOARD_NO = RE.REF_BOARD_NO
		            WHERE B.STATUS = 'Y'
		            AND   B.CATEGORY_NO = 10
		            ORDER BY B.BOARD_NO DESC) A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>

</properties>